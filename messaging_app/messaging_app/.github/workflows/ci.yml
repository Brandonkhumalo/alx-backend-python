name: Django CI

on:
  push:
    branches:
      - '**'
  pull_request:
    branches:
      - '**'

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: rootpassword
          MYSQL_DATABASE: test_db
          MYSQL_USER: test_user
          MYSQL_PASSWORD: test_password
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping --silent"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3

    env:
      MYSQL_ROOT_PASSWORD: rootpassword
      MYSQL_DATABASE: test_db
      MYSQL_USER: test_user
      MYSQL_PASSWORD: test_password
      DJANGO_SETTINGS_MODULE: messaging_app.settings  # adjust if needed

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'  # match your project Python version

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r messaging_app/requirements.txt
          pip install pytest pytest-django mysqlclient flake8 coverage

      - name: Run flake8 linting
        run: |
          flake8 messaging_app
          
      - name: Wait for MySQL to be ready
        run: |
          for i in {1..30}; do
            mysqladmin ping -h 127.0.0.1 -P 3306 --silent && break
            echo "Waiting for MySQL..."
            sleep 2
          done

      - name: Run tests with coverage
        run: |
          export DATABASE_URL="mysql://test_user:test_password@127.0.0.1:3306/test_db"
          coverage run -m pytest messaging_app --maxfail=1 --disable-warnings -q

      - name: Generate coverage report
        run: |
          coverage xml
          coverage report -m

      - name: Upload coverage report artifact
        uses: actions/upload-artifact@v3
        with:
          name: coverage-report
          path: coverage.xml
